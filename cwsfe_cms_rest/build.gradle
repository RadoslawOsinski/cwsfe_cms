buildscript {
    repositories {
        mavenLocal();
        mavenCentral();
    }
}

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'base'
apply plugin: 'jacoco'

version = '3.0.1'
group = "eu.com.cwsfe.cms"
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenLocal();
    mavenCentral();
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
    options.compilerArgs = ['-Xlint', '-Xlint:-serial', '-Xlint:-path']
}

dependencies {
    compile project(':cwsfe_cms_dao')
    compile group: 'org.springframework', name: 'spring-webmvc', version: '4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-tx', version: '4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-core', version: '4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-beans', version: '4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version: '4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-context-support', version: '4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-web', version: '4.3.3.RELEASE'  //dla CommonsMultipartFile
    compile group: 'javax.ejb', name: 'ejb-api', version: '3.0'
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.8.4'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.4'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.4'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.0'
    testCompile project(path: ':cwsfe_cms_dao', configuration: 'tests')
    testCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1' //3.1.0 -newer version has problems with tests
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.springframework', name: 'spring-test', version: '4.3.3.RELEASE'
    testCompile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.2.0'
    testCompile group: 'com.jayway.jsonpath', name: 'json-path-assert', version: '2.2.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.2.9'
}

def gitCommitHash = "git rev-parse HEAD".execute().text.trim();

jar.archiveName = "CWSFE_CMS_REST-" + version + ".jar";
jar {
    manifest {
        attributes(
            'Specification-Title': project.name,
            'Specification-Version': version,
            'build-number': System.getenv().BUILD_NUMBER == null ? 'local build' : System.getenv().BUILD_NUMBER,
            'build-id': System.getenv().BUILD_ID == null ? 'local build' : System.getenv().BUILD_ID,
            'Build-Time': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            'Build-Url': System.getenv().BUILD_URL == null ? 'local build' : System.getenv().BUILD_URL,
            'scm-version': gitCommitHash == null ? 'local build' : gitCommitHash,
            'Build-Tag': System.getenv().BUILD_TAG == null ? 'local build' : System.getenv().BUILD_TAG,
            'Jenkins-Url': System.getenv().JENKINS_URL == null ? 'local build' : System.getenv().JENKINS_URL,
            'Build-Workspace': System.getenv().WORKSPACE == null ? 'local build' : System.getenv().WORKSPACE,
            'Git-Url': System.getenv().GIT_URL == null ? 'local build' : System.getenv().GIT_URL,
            'Git-Branch': System.getenv().GIT_BRANCH == null ? 'local build' : System.getenv().GIT_BRANCH
        )
    }
}

task integration_tests_local(type: Test) {
    systemProperty "spring.profiles.test-groups", "integration-tests-local"
    systemProperty "spring.profiles.active", "tomcat";
    systemProperty "test-groups", "integration-tests-local";
    systemProperty "test-groups", "integration-tests-local";

    //pass environment variable parameters from .gradle/gradle.properties to environment variable parameters in test task
    systemProperty "cwsfe_cms.jdbc.driverClassName", System.properties['cwsfe_cms.jdbc.driverClassName'];
    systemProperty "cwsfe_cms.jdbc.url", System.properties['cwsfe_cms.jdbc.url'];
    systemProperty "cwsfe_cms.jdbc.user", System.properties['cwsfe_cms.jdbc.user'];
    systemProperty "cwsfe_cms.jdbc.password", System.properties['cwsfe_cms.jdbc.password'];
}

jacoco {
    toolVersion = "0.7.8"
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    reports {
        xml.enabled true
        csv.enabled false
        html.destination "${buildDir}/reports/coverage"
    }
    executionData = files('build/jacoco/test.exec', 'build/jacoco/integration_tests_local.exec')
}

sonarqube {
    properties {
        property "sonar.projectKey", 'cwsfe_cms_rest'
        property "sonar.projectName", 'CWSFE cms rest'
        property "sonar.sources", 'src/main'
        property "sonar.tests", 'src/test'
        property "sonar.sourceEncoding", 'UTF-8'
    }
}
