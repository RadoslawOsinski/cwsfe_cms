//in root project configuration
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://artifacts.alfresco.com/nexus/content/repositories/public/"
        }
    }
    dependencies {
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.11'
        classpath 'gradle.plugin.com.boxfuse.client:flyway-release:4.0.3'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
    }
}

subprojects {
    apply plugin: 'org.flywaydb.flyway'
    apply plugin: 'info.solidsoft.pitest'
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'org.sonarqube'

    sourceCompatibility = 9
    targetCompatibility = 9
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://artifacts.alfresco.com/nexus/content/repositories/public/"
        }
    }

    pitest {
        threads = 4
        if (project.name in ['module-without-any-test']) {
            failWhenNoMutations = false
        }
    }
    flyway {
        //values in ~/.gradle/gradle.properties file
        driver = System.properties['cwsfe_cms.jdbc.driver'];
        url = System.properties['cwsfe_cms.jdbc.url'];
        user = System.properties['cwsfe_cms.jdbc.user'];
        password = System.properties['cwsfe_cms.jdbc.password'];
    }
    sonarqube {
        properties {
            property 'sonar.host.url', System.properties['cwsfe_cms.sonar.host.url']
            property 'sonar.sourceEncoding', 'UTF-8'
            property 'sonar.login', System.properties['cwsfe_cms.sonar.login']
            property 'sonar.password', System.properties['cwsfe_cms.sonar.password']
            property 'sonar.jacoco.itReportPath', 'build/jacoco/integration_tests_local.exec'
            property 'sonar.jacoco.reportPath', 'build/jacoco/test.exec'

            //for code coverage in integration tests
            property 'spring.profiles.test-groups', 'integration-tests-local'
            property 'spring.profiles.active', 'tomcat'
        }
    }

    ext {
        project_version = '3.1.0';
        spring_version = '5.0.0.M5'
        spring_security_version = '4.2.3.RELEASE'
        mail_api_version = '1.6.0'
        activation_version = '1.1.1'
        jsp_api_version = '2.2.1-b03'
        old_servlet_api_version = '3.0.1'
//        servlet_api_version = '4.0.0-b07'
        mail_version = '1.5.0-b01'
        javax_ejb_version = '3.0'
        jstl_version = '1.2'
        javax_annotation_api_version = '1.3'
        jackson_version = '2.9.0'
        swagger_version = '2.7.0'
        transaction_api_version = '1.2'
        javax_resources_version = '1.7'
        javax_persistance_version = '1.0.2'
        commons_logging_version = '1.2'
        commons_io_version = '2.5'
        commons_fileupload_version = '1.3.3'
        commons_dbcp_version = '1.4'
        commons_beanutils_version = '1.9.3'
        commons_collections_version = '20040616'
        commons_lang_version = '2.6'
        commons_lang3_version = '3.6'
        commons_pool_version = '1.6'
        flyway_core_version = '4.2.0'
        postgresql_version = '42.1.4'
        ezomorph_version = '1.0.6'
        json_lib_version = '2.4'
        rome_version = '1.0.0'
        aws_java_jdk_version = '1.11.176'
        jwt_version = '0.7.0'
        aop_alliance_version = '1.0'
        slf4j_version = '1.7.25'
        logback_version = '1.2.3'
        json_path_version = '2.4.0'
        hibernate_jpa2_api_version = '1.0.0.Final'
        hibernate_core_version = '5.2.10.Final'
        hibernate_validator_version = '6.0.1.Final'
        hazelcast_hibernate52_version = '1.2.2'
        hazelcast_version = '3.8.2'
        modelmapper_version = '1.1.0'
        mockito_version = '2.8.47'
        junit5_version = '5.0.0-RC2'
        junit5_platform_version = '1.0.0-RC2'
        jacoco_version = '0.7.8'
        selenide_version = '4.5.1'
    }

    dependencies {
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: project.ext.junit5_version
//        testCompile group: 'org.pitest', name: 'pitest-maven', version: '1.2.0'   //todo uncomment!
    }
}
