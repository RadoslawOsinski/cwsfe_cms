import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

apply plugin: 'maven'
apply plugin: 'war'
apply plugin: 'java-library'
apply plugin: 'base'
apply plugin: 'jacoco'
apply plugin: 'org.junit.platform.gradle.plugin'

version = project.ext.project_version
group = "eu.com.cwsfe.cms"
ext.moduleName = 'eu.com.cwsfe.cms.web'
compileJava.options.encoding = 'UTF-8'

configurations.all {
    exclude group: 'org.jboss.spec.javax.transaction', module: 'jboss-transaction-api_1.2_spec'
}

//configurations {
//    tomcatLibs
//}

dependencies {
    implementation project(':cwsfe_cms_rest')
    implementation group: 'javax.servlet.jsp', name: 'jsp-api', version: project.ext.jsp_api_version
    implementation group: 'javax.servlet', name: 'javax.servlet-api', version: project.ext.servlet_api_version
    implementation group: 'javax.mail', name: 'mail', version: project.ext.mail_version //provided for wildfly
    implementation group: 'javax.activation', name: 'activation', version: project.ext.activation_version //provided for wildfly
//    tomcatLibs group: 'javax.mail', name: 'mail', version: project.ext.mail_version //only for tomcat
//    tomcatLibs group: 'javax.activation', name: 'activation', version: project.ext.activation_version //only for tomcat
    implementation group: 'javax.mail', name: 'mail', version: project.ext.mail_version //only for tomcat
    implementation group: 'javax.activation', name: 'activation', version: project.ext.activation_version //only for tomcat
    implementation group: 'javax.mail', name: 'javax.mail-api', version: project.ext.mail_api_version
    implementation group: 'org.springframework.security', name: 'spring-security-web', version: project.ext.spring_security_version
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: project.ext.spring_security_version
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: project.ext.spring_security_version
    implementation group: 'org.springframework', name: 'spring-webmvc', version: project.ext.spring_version
    implementation group: 'org.springframework', name: 'spring-tx', version: project.ext.spring_version
    implementation group: 'org.springframework', name: 'spring-core', version: project.ext.spring_version
    implementation group: 'org.springframework', name: 'spring-beans', version: project.ext.spring_version
    implementation group: 'org.springframework', name: 'spring-expression', version: project.ext.spring_version
    implementation group: 'org.springframework', name: 'spring-context', version: project.ext.spring_version
    implementation group: 'org.springframework', name: 'spring-aop', version: project.ext.spring_version
    implementation group: 'org.springframework', name: 'spring-jms', version: project.ext.spring_version
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: project.ext.swagger_version
    runtimeOnly group: 'io.springfox', name: 'springfox-swagger-ui', version: project.ext.swagger_version
    implementation group: 'javax.ejb', name: 'ejb-api', version: project.ext.javax_ejb_version
    implementation group: 'javax.servlet.jsp.jstl', name: 'jstl-api', version: project.ext.jstl_version
    implementation group: 'javax.servlet', name: 'jstl', version: project.ext.jstl_version
    implementation group: 'javax.transaction', name: 'javax.transaction-api', version: project.ext.transaction_api_version
    implementation group: 'javax.resource', name: 'javax.resource-api', version: project.ext.javax_resources_version
    implementation group: 'commons-logging', name: 'commons-logging', version: project.ext.commons_logging_version
    implementation group: 'commons-io', name: 'commons-io', version: project.ext.commons_io_version
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: project.ext.commons_fileupload_version
    implementation group: 'commons-dbcp', name: 'commons-dbcp', version: project.ext.commons_dbcp_version
    implementation group: 'aopalliance', name: 'aopalliance', version: project.ext.aop_alliance_version
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: project.ext.commons_beanutils_version
    implementation group: 'commons-collections', name: 'commons-collections', version: project.ext.commons_collections_version
    implementation group: 'commons-lang', name: 'commons-lang', version: project.ext.commons_lang_version
    implementation group: 'commons-pool', name: 'commons-pool', version: project.ext.commons_pool_version
    implementation group: 'net.sf.ezmorph', name: 'ezmorph', version: project.ext.ezomorph_version
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: project.ext.swagger_version
    runtimeOnly group: 'io.springfox', name: 'springfox-swagger-ui', version: project.ext.swagger_version
    implementation group: 'javax.json', name:'javax.json-api', version: project.ext.json_api_version
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-ec2', version: project.ext.aws_java_jdk_version
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: project.ext.aws_java_jdk_version
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: project.ext.jwt_version
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: project.ext.junit5_version
    testImplementation group: 'org.junit.platform', name: 'junit-platform-runner', version: project.ext.junit5_platform_version
    testImplementation group: 'org.springframework', name: 'spring-test', version: project.ext.spring_version
    testImplementation group: 'com.jayway.jsonpath', name: 'json-path', version: project.ext.json_path_version
    testImplementation group: 'com.jayway.jsonpath', name: 'json-path-assert', version: project.ext.json_path_version
    testImplementation group: 'org.mockito', name: 'mockito-core', version: project.ext.mockito_version
    testImplementation group: 'javax.mail', name: 'mail', version: project.ext.mail_version //only for tomcat :(, add this jar to ${CATALINA_HOME}/lib
    testImplementation group: 'javax.activation', name: 'activation', version: project.ext.activation_version //only for tomcat, add this jar to ${CATALINA_HOME}/lib
    testImplementation group: 'javax.mail', name: 'javax.mail-api', version: project.ext.mail_api_version
}

//default war for wildfly
war {
    from (project(':cwsfe_cms_repository').file('src/main/resources/'));
    exclude "resources-cwsfe-cms/css";
    exclude "resources-cwsfe-cms/js";
    from("build/webapp/resources-cwsfe-cms/css") {
        into '/resources-cwsfe-cms/css'
    }
    from("build/webapp/resources-cwsfe-cms/js") {
        into '/resources-cwsfe-cms/js'
    }
}

def gitCommitHash = "git rev-parse HEAD".execute().text.trim();

compileJava {
    inputs.property("moduleName", moduleName)
    options.compilerArgs += [
        "--module-path", classpath.asPath
    ]
}

war.archiveName = 'CWSFE_CMS-' + version + '.war';
war {
    inputs.property("moduleName", moduleName)
    manifest {
        attributes(
            'Automatic-Module-Name': moduleName,
            'Specification-Title': project.name,
            'Specification-Version': version,
            'build-number': System.getenv().BUILD_NUMBER == null ? 'local build' : System.getenv().BUILD_NUMBER,
            'build-id': System.getenv().BUILD_ID == null ? 'local build' : System.getenv().BUILD_ID,
            'Build-Time': ZonedDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ssZ")),
            'Build-Url': System.getenv().BUILD_URL == null ? 'local build' : System.getenv().BUILD_URL,
            'scm-version': gitCommitHash == null ? 'local build' : gitCommitHash,
            'Build-Tag': System.getenv().BUILD_TAG == null ? 'local build' : System.getenv().BUILD_TAG,
            'Jenkins-Url': System.getenv().JENKINS_URL == null ? 'local build' : System.getenv().JENKINS_URL,
            'Build-Workspace': System.getenv().WORKSPACE == null ? 'local build' : System.getenv().WORKSPACE,
            'Git-Url': System.getenv().GIT_URL == null ? 'local build' : System.getenv().GIT_URL,
            'Git-Branch': System.getenv().GIT_BRANCH == null ? 'local build' : System.getenv().GIT_BRANCH
        )
    }
}

//task createTomcatWar(type: War, dependsOn: classes) {
//    archiveName = 'CWSFE_CMS-tomcat-' + version + '.war';
//    classpath configurations.tomcatLibs // adds a configuration to the WEB-INF/lib dir
//    manifest {
//        attributes(
//            'Specification-Title': project.name,
//            'Specification-Version': version,
//            'build-number': System.getenv().BUILD_NUMBER == null ? 'local build' : System.getenv().BUILD_NUMBER,
//            'build-id': System.getenv().BUILD_ID == null ? 'local build' : System.getenv().BUILD_ID,
//            'Build-Time': ZonedDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ssZ")),
//            'Build-Url': System.getenv().BUILD_URL == null ? 'local build' : System.getenv().BUILD_URL,
//            'scm-version': gitCommitHash == null ? 'local build' : gitCommitHash,
//            'Build-Tag': System.getenv().BUILD_TAG == null ? 'local build' : System.getenv().BUILD_TAG,
//            'Jenkins-Url': System.getenv().JENKINS_URL == null ? 'local build' : System.getenv().JENKINS_URL,
//            'Build-Workspace': System.getenv().WORKSPACE == null ? 'local build' : System.getenv().WORKSPACE,
//            'Git-Url': System.getenv().GIT_URL == null ? 'local build' : System.getenv().GIT_URL,
//            'Git-Branch': System.getenv().GIT_BRANCH == null ? 'local build' : System.getenv().GIT_BRANCH
//        )
//    }
//}

task integration_tests_local(type: Test) {
    systemProperty "spring.profiles.test-groups", "integration-tests-local"
    systemProperty "spring.profiles.active", "tomcat";
    systemProperty "test-groups", "integration-tests-local";
    systemProperty "test-groups", "integration-tests-local";

    //pass environment variable parameters from .gradle/gradle.properties to environment variable parameters in test task
    systemProperty "cwsfe_cms.jdbc.driverClassName", System.properties['cwsfe_cms.jdbc.driverClassName'];
    systemProperty "cwsfe_cms.jdbc.url", System.properties['cwsfe_cms.jdbc.url'];
    systemProperty "cwsfe_cms.jdbc.user", System.properties['cwsfe_cms.jdbc.user'];
    systemProperty "cwsfe_cms.jdbc.password", System.properties['cwsfe_cms.jdbc.password'];
}

jacoco {
    toolVersion = project.ext.jacoco_version
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    reports {
        xml.enabled true
        csv.enabled false
        html.setDestination(new File("${buildDir}/reports/coverage"))
    }
    executionData = files('build/jacoco/test.exec', 'build/jacoco/integration_tests_local.exec')
}

sonarqube {
    properties {
        property "sonar.projectKey", 'cwsfe_cms_website'
        property "sonar.projectName", 'CWSFE cms website'
        property "sonar.sources", 'src/main'
        property "sonar.tests", 'src/test'
        property "sonar.sourceEncoding", 'UTF-8'
        property "sonar.exclusions", '**/datatables/*,**/foundation/*,**/jquery/*,**/jqueryui/*,**/knockout/*,**/modernizr/*,**/requirejs/*,**/*.css'
    }
}
